plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
//	id "io.freefair.lombok" version "5.2.1"
	id "org.flywaydb.flyway" version "7.5.3"
	id 'java'
	id 'war'
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenLocal()
	mavenCentral()
}

ext {
	springCloudVersion = '2020.0.3'

	// NOTE: Make sure to use compatible versions of spring boot/hibernate/graphql
	springBootVersion = '2.4.5'
	hibernateVersion = '5.4.30.Final'
	graphqlJavaKickstartVersion = '11.1.0'
}

dependencies {
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.4.1'

//	implementation 'org.javassist:javassist:3.27.0-GA'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// https://github.com/graphql-java-kickstart/graphql-spring-boot
	implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:11.0.0'
	testImplementation 'com.graphql-java-kickstart:graphql-spring-boot-starter-test:11.0.0'
	// to embed GraphQL Playground tool at hostname:port/playground
	runtimeOnly 'com.graphql-java-kickstart:playground-spring-boot-starter:11.0.0'
	// to embed Voyager tool at hostname:post/voyager
	runtimeOnly 'com.graphql-java-kickstart:voyager-spring-boot-starter:11.0.0'

	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		// Exclude vintage-engine to disable junit3/junit4 support
//		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

//	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
//	testImplementation 'com.h2database:h2:1.4.200'
//	testImplementation 'org.mockito:mockito-inline:3.6.28'
//	implementation "org.springframework.boot:spring-boot-starter-cache:$springBootVersion"
//	implementation "org.springframework.boot:spring-boot-starter-validation:$springBootVersion"
//	implementation "org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion"
//	implementation "org.springframework.boot:spring-boot-starter-websocket:$springBootVersion"
//	developmentOnly "org.springframework.boot:spring-boot-devtools:$springBootVersion"
//	implementation "org.springframework.boot:spring-boot-starter-data-cassandra:$springBootVersion"
//	implementation "org.hibernate:hibernate-jcache:$hibernateVersion"
//	implementation 'org.ehcache:ehcache:3.9.0'
//	testImplementation "org.springframework.security:spring-security-test:5.3.8.RELEASE"


	implementation 'commons-io:commons-io:2.8.0'
	implementation 'commons-lang:commons-lang:2.6'

    // Lombok and commons for boilerplate code
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}


bootJar {
	enabled = false
}

jar {
	enabled = true
}

flyway {
	configFiles = ['src/main/resources/db/flyway-dev.conf']
}
